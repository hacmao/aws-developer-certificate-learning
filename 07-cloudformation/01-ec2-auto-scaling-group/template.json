{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Parameters": {
    "InstanceType": {
      "Description": "Instance type of EC2",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t1.micro",
        "t2.nano",
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge",
        "m2.xlarge",
        "m2.2xlarge",
        "m2.4xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "c1.medium",
        "c1.xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "hi1.4xlarge",
        "hs1.8xlarge",
        "cr1.8xlarge",
        "cc2.8xlarge",
        "cg1.4xlarge"
      ],
      "ConstraintDescription": "Not a valid ec2 instance"
    },
    "OperatorEmail": {
      "Description": "Email to send notification",
      "Type": "String",
      "AllowedPattern": "([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)",
      "ConstraintDescription": "Not a valid email"
    },
    "KeyName": {
      "Description": "Key pair for EC2",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Not a valid key pair"
    },
    "SSHAllowLocation": {
      "Description": "The Ip address range that can be used to SSH to EC2 instances",
      "Type": "String",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
    }
  },
  "Mappings": {
    "AWSRegionArch2AMI": {
      "ap-northeast-1": {
        "AMI": "ami-08847abae18baa040"
      },
      "ap-northeast-2": {
        "AMI": "ami-012566705322e9a8e"
      },
      "ap-south-1": {
        "AMI": "ami-00b6a8a2bd28daf19"
      },
      "ap-southeast-1": {
        "AMI": "ami-01da99628f381e50a"
      },
      "ap-southeast-2": {
        "AMI": "ami-00e17d1165b9dd3ec"
      },
      "eu-central-1": {
        "AMI": "ami-076431be05aaf8080"
      },
      "eu-west-1": {
        "AMI": "ami-0bdb1d6c15a40392c"
      },
      "eu-west-2": {
        "AMI": "ami-e1768386"
      },
      "eu-west-3": {
        "AMI": "ami-06340c8c12baa6a09"
      },
      "sa-east-1": {
        "AMI": "ami-0ad7b0031d41ed4b9"
      },
      "us-east-1": {
        "AMI": "ami-04681a1dbd79675a5"
      },
      "us-east-2": {
        "AMI": "ami-0cf31d971a3ca20d6"
      },
      "us-west-1": {
        "AMI": "ami-0782017a917e973e7"
      },
      "us-west-2": {
        "AMI": "ami-6cd6f714"
      }
    }
  },
  "Resources": {
    "snsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "Subscription": [
          {
            "Endpoint": {
              "Ref": "OperatorEmail"
            },
            "Protocol": "Email"
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "50e4b897-812f-4655-af76-0e48ab734fed"
        }
      }
    },
    "ServerGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AutoScalingGroupName": "webser-autoscaling-group",
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": "1",
        "MaxSize": "3",
        "LoadBalancerNames": [
          {
            "Ref": "ElasticLoadBalancer"
          }
        ],
        "NotificationConfiguration": {
          "TopicARN": {
            "Ref": "snsTopic"
          },
          "NotificationTypes": [
            "autoscaling:EC2_INSTANCE_LAUNCH",
            "autoscaling:EC2_INSTANCE_LAUNCH_ERROR",
            "autoscaling:EC2_INSTANCE_TERMINATE",
            "autoscaling:EC2_INSTANCE_TERMINATE_ERROR"
          ]
        }
      },
      "CreationPolicy": {
        "ResourceSignal": {
          "Count": "1",
          "Timeout": "PT15M"
        }
      },
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "PauseTime": "PT15M",
          "WaitOnResourceSignals": "true"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "503d5559-1d73-47b9-970d-fb78a5e81ab7"
        }
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Metadata": {
        "Comment": "Install a simple application",
        "AWS::CloudFormation::Init": {
          "config": {
            "packages": {
              "yum": {
                "httpd": []
              }
            },
            "files": {
              "/var/www/html/index.html": {
                "content": "Hacmao hello world!",
                "mode": "000644",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/cfn-hup.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[main]\n",
                      "stack=",
                      {
                        "Ref": "AWS::StackId"
                      },
                      "\n",
                      "region=",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n"
                    ]
                  ]
                },
                "mode": "000400",
                "owner": "root",
                "group": "root"
              },
              "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                "content": {
                  "Fn::Join": [
                    "",
                    [
                      "[cfn-auto-reloader-hook]\n",
                      "triggers=post.update\n",
                      "path=Resources.LaunchConfig.Metadata.AWS::CloudFormation::Init\n",
                      "action=/opt/aws/bin/cfn-init -v ",
                      "         --stack ",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "         --resource LaunchConfig ",
                      "         --region ",
                      {
                        "Ref": "AWS::Region"
                      },
                      "\n",
                      "runas=root\n"
                    ]
                  ]
                }
              }
            },
            "services": {
              "sysvinit": {
                "httpd": {
                  "enabled": "true",
                  "ensureRunning": "true"
                },
                "cfn-hup": {
                  "enabled": "true",
                  "ensureRunning": "true",
                  "files": [
                    "/etc/cfn/cfn-hup.conf",
                    "/etc/cfn/hooks.d/cfn-auto-reloader.conf"
                  ]
                }
              }
            }
          }
        },
        "AWS::CloudFormation::Designer": {
          "id": "aec56fbe-3c38-456d-8546-89290edd65d2"
        }
      },
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Fn::FindInMap": [
            "AWSRegionArch2AMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "InstanceSecurityGroup"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash -xe\n",
                "yum update -y aws-cfn-bootstrap\n",
                "/opt/aws/bin/cfn-init -v ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource LaunchConfig ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n",
                "/opt/aws/bin/cfn-signal -e $? ",
                "         --stack ",
                {
                  "Ref": "AWS::StackName"
                },
                "         --resource ServerGroup ",
                "         --region ",
                {
                  "Ref": "AWS::Region"
                },
                "\n"
              ]
            ]
          }
        }
      }
    },

    "ElasticLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "CrossZone": "true",
        "Listeners": [
          {
            "LoadBalancerPort": "80",
            "InstancePort": "80",
            "Protocol": "HTTP"
          }
        ],
        "HealthCheck": {
          "Target": "HTTP:80/",
          "HealthyThreshold": "3",
          "UnhealthyThreshold": "5",
          "Interval": "30",
          "Timeout": "5"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "df899b46-35d4-4298-8e1b-4af46ed29bf6"
        }
      }
    },
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH access and HTTP from the load balancer only",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {
              "Ref": "SSHAllowLocation"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "SourceSecurityGroupOwnerId": {
              "Fn::GetAtt": [
                "ElasticLoadBalancer",
                "SourceSecurityGroup.OwnerAlias"
              ]
            },
            "SourceSecurityGroupName": {
              "Fn::GetAtt": [
                "ElasticLoadBalancer",
                "SourceSecurityGroup.GroupName"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e650b7bd-486f-46fa-a9f6-3b3843c798e5"
        }
      }
    },
    "WebServerScaleUpPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "ServerGroup"
        },
        "Cooldown": "60",
        "ScalingAdjustment": "1"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "02fcb49d-a6ea-4175-ae8a-b32250b08843"
        }
      }
    },
    "WebServerScaleDownPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "ServerGroup"
        },
        "Cooldown": "60",
        "ScalingAdjustment": "-1"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "b29290ad-8237-4392-861c-eb23b2a3ac88"
        }
      }
    },
    "CPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-up if CPU > 90% for 10 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "300",
        "EvaluationPeriods": "2",
        "Threshold": "90",
        "AlarmActions": [
          {
            "Ref": "WebServerScaleUpPolicy"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "ServerGroup"
            }
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "2e17b418-307f-4811-8c66-0a7f8eca39bd"
        }
      }
    },
    "CPUAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "AlarmDescription": "Scale-down if CPU < 70% for 10 minutes",
        "MetricName": "CPUUtilization",
        "Namespace": "AWS/EC2",
        "Statistic": "Average",
        "Period": "300",
        "EvaluationPeriods": "2",
        "Threshold": "70",
        "AlarmActions": [
          {
            "Ref": "WebServerScaleDownPolicy"
          }
        ],
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "ServerGroup"
            }
          }
        ],
        "ComparisonOperator": "LessThanThreshold"
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "d41fa7bb-e5ed-423b-834f-54d57dbf785a"
        }
      }
    }
  },
  "Outputs": {
    "URL": {
      "Description": "The URL of the website",
      "Value": {
        "Fn::Join": [
          "",
          [
            "http://",
            {
              "Fn::GetAtt": ["ElasticLoadBalancer", "DNSName"]
            }
          ]
        ]
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "df899b46-35d4-4298-8e1b-4af46ed29bf6": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 80,
          "y": 70
        },
        "z": 1,
        "embeds": []
      },
      "e650b7bd-486f-46fa-a9f6-3b3843c798e5": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": -50,
          "y": 200
        },
        "z": 1,
        "embeds": []
      },
      "aec56fbe-3c38-456d-8546-89290edd65d2": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 80,
          "y": 200
        },
        "z": 1,
        "embeds": []
      },
      "50e4b897-812f-4655-af76-0e48ab734fed": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 200,
          "y": 70
        },
        "z": 1,
        "embeds": []
      },
      "503d5559-1d73-47b9-970d-fb78a5e81ab7": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 200,
          "y": 200
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": [
          "aec56fbe-3c38-456d-8546-89290edd65d2",
          "df899b46-35d4-4298-8e1b-4af46ed29bf6"
        ]
      },
      "b29290ad-8237-4392-861c-eb23b2a3ac88": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 150,
          "y": 370
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": ["503d5559-1d73-47b9-970d-fb78a5e81ab7"]
      },
      "d41fa7bb-e5ed-423b-834f-54d57dbf785a": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 40,
          "y": 360
        },
        "z": 1,
        "embeds": []
      },
      "02fcb49d-a6ea-4175-ae8a-b32250b08843": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 260,
          "y": 370
        },
        "z": 1,
        "embeds": [],
        "isassociatedwith": ["503d5559-1d73-47b9-970d-fb78a5e81ab7"]
      },
      "2e17b418-307f-4811-8c66-0a7f8eca39bd": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 330,
          "y": 280
        },
        "z": 1,
        "embeds": []
      }
    }
  }
}
